name: Assign Issue Based on Webhook

on:
  issues:
    types: [opened]

jobs:
  assign-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Call webhook to get user
        id: call_webhook
        run: |
          response=$(curl -s -X POST ${{ secrets.WEBHOOK_URL }} \
            -H "Content-Type: application/json" \
            -H "x-ddn-project-id: ${{ secrets.DDN_PROJECT_ID }}" \
            -H "authorization: api-key ${{ secrets.PROMPTQL_API_KEY }}" \
            -d '{"description": "${{ github.event.issue.title }}\n\n${{ github.event.issue.body }}"}')
          echo "Webhook response: $response"

          # Check if output.data exists and has elements
          data_length=$(echo $response | jq -r '.output.data | length // 0')
          echo "Number of assignees returned: $data_length"

          # Extract assignees based on available data
          assignees=""
          if [ "$data_length" -gt 0 ]; then
            assignee1=$(echo $response | jq -r '.output.data[0].name // empty')
            if [ ! -z "$assignee1" ] && [ "$assignee1" != "null" ]; then
              assignees="$assignee1"
              echo "First assignee: $assignee1"
            fi
          fi

          if [ "$data_length" -gt 1 ]; then
            assignee2=$(echo $response | jq -r '.output.data[1].name // empty')
            if [ ! -z "$assignee2" ] && [ "$assignee2" != "null" ]; then
              if [ ! -z "$assignees" ]; then
                assignees="$assignees,$assignee2"
              else
                assignees="$assignee2"
              fi
              echo "Second assignee: $assignee2"
            fi
          fi

          if [ -z "$assignees" ]; then
            echo "No valid assignees found"
          else
            echo "Final assignees list: $assignees"
          fi

          echo "assignees=$assignees" >> $GITHUB_OUTPUT

      - name: Assign issue
        if: steps.call_webhook.outputs.assignees != ''
        run: |
          assignees_list="${{ steps.call_webhook.outputs.assignees }}"
          echo "Attempting to assign: $assignees_list"

          # Convert comma-separated assignees to JSON array format
          if [ ! -z "$assignees_list" ]; then
            json_assignees=$(echo "$assignees_list" | sed 's/,/","/g' | sed 's/^/"/' | sed 's/$/"/')
            echo "JSON format: [$json_assignees]"

            response=$(curl -s -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/assignees \
              -d "{\"assignees\": [$json_assignees]}")

            echo "Assignment response: $response"

            # Check if assignment was successful
            if echo "$response" | jq -e '.message' > /dev/null 2>&1; then
              echo "Assignment failed: $(echo "$response" | jq -r '.message')"
              exit 1
            else
              echo "Successfully assigned issue to: $assignees_list"
            fi
          else
            echo "No assignees to assign"
          fi
